{"version":3,"sources":["components/LoginForm.js","actions/index.js","reducers/reducer_posts.js","reducers/index.js","components/posts_index.js","components/posts_new.js","components/posts_show.js","index.js"],"names":["LoginForm","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","onSubmit","bind","assertThisInitialized","_this2","_this$state","email","password","_this$props","isLoginPending","isLoginSuccess","loginError","react_default","a","createElement","name","className","type","onChange","e","setState","target","value","react_router_dom","to","message","preventDefault","_this$state2","Component","connect","FETCH_POSTS","FETCH_POST","CREATE_POST","DELETE_POST","ROOT_URL","API_KEY","rootReducer","combineReducers","posts","arguments","length","undefined","action","_","omit","payload","objectSpread","defineProperty","data","id","mapKeys","form","formReducer","PostsIndex","fetchPosts","map","post","key","concat","title","console","log","renderPosts","request","axios","get","PostsNew","field","_field$meta","meta","touched","error","label","assign","input","values","createPost","history","push","handleSubmit","Field","component","renderField","reduxForm","validate","errors","content","callback","then","PostsShow","match","params","fetchPost","deletePost","onClick","onDeleteClick","_ref","ownProps","delete","createStoreWithMiddleware","applyMiddleware","promise","createStore","ReactDOM","render","es","store","reducers","react_router","path","document","querySelector"],"mappings":"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","file":"static/js/main.5525cad0.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\n\nclass LoginForm extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {};\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n\n  render() {\n    let {email, password} = this.state;\n    let {isLoginPending, isLoginSuccess, loginError} = this.props;\n    return (\n      <form name=\"loginForm\" onSubmit={this.onSubmit}>\n        <div className=\"form-group-collection\">\n          <div className=\"form-group\">\n            <label>Email:</label>\n            <input type=\"email\" name=\"email\" onChange={e => this.setState({email: e.target.value})} value={email}/>\n          </div>\n\n          <div className=\"form-group\">\n            <label>Password:</label>\n            <input type=\"password\" name=\"password\" onChange={e => this.setState({password: e.target.value})} value={password}/>\n          </div>\n        </div>\n\n        <input type=\"submit\" value=\"Login\"/>\n         <Link to={`/posts`}>\n          </Link>\n\n        <div className=\"message\">\n          { isLoginPending && <div>Please wait...</div> }\n          { isLoginSuccess && <div>Success.</div> }\n          { loginError && <div>{loginError.message}</div> }\n        </div>\n      </form>\n    )\n  }\n\n  onSubmit(e) {\n    e.preventDefault();\n    let { email, password } = this.state;\n    //this.state.login(email, password);\n    this.setState({\n      email: '',\n      password: ''\n    });\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    isLoginPending: state.isLoginPending,\n    isLoginSuccess: state.isLoginSuccess,\n    loginError: state.loginError\n  };\n}\n\n// const mapDispatchToProps = (dispatch) => {\n//   return {\n//     login: (email, password) => dispatch(login(email, password))\n//   };\n// }\n\nexport default connect(mapStateToProps)(LoginForm);","import axios from 'axios';\n\nexport const SET_LOGIN_PENDING = 'set_login_pending';\nexport const SET_LOGIN_SUCCESS = 'set_login_success';\nexport const SET_LOGIN_ERROR = 'set_login_error';\n\nexport const FETCH_POSTS = 'fetch_posts';\nexport const FETCH_POST = 'fetch_post';\nexport const CREATE_POST = 'create_post';\nexport const DELETE_POST = 'delete_post';\n\nconst ROOT_URL = 'https://reduxblog.herokuapp.com/api';\nconst API_KEY = '?key=hu53yin';\n\nexport function set_login_pending(){\n  const request = axios.get(`${ROOT_URL}/login`);\n\n  return{\n    type: SET_LOGIN_PENDING,\n    payload: request\n  };\n}\n\nexport function set_login_success(){\n  const request = axios.get(`${ROOT_URL}/login`);\n\n  return{\n    type: SET_LOGIN_SUCCESS,\n    payload: request\n  };\n}\n\nexport function set_login_error(){\n  const request = axios.get(`${ROOT_URL}/login`);\n\n  return{\n    type: SET_LOGIN_ERROR,\n    payload: request\n  };\n}\n\n\nexport function fetchPosts() {\n  const request = axios.get(`${ROOT_URL}/posts${API_KEY}`);\n\n  return {\n    type: FETCH_POSTS,\n    payload: request\n  };\n}\n\nexport function createPost(values, callback) {\n  const request = axios.post(`${ROOT_URL}/posts${API_KEY}`, values)\n    .then(() => callback());\n\n  return {\n    type: CREATE_POST,\n    payload: request\n  };\n}\n\nexport function fetchPost(id) {\n  const request = axios.get(`${ROOT_URL}/posts/${id}${API_KEY}`);\n\n  return {\n    type: FETCH_POST,\n    payload: request\n  }\n}\n\nexport function deletePost(id, callback) {\n  const request = axios.delete(`${ROOT_URL}/posts/${id}${API_KEY}`)\n    .then(() => callback());\n\n  return {\n    type: DELETE_POST,\n    payload: id\n  }\n}","import _ from 'lodash';\nimport { FETCH_POSTS, FETCH_POST, DELETE_POST } from '../actions';\n\nexport default function (state = {}, action) {\n  switch (action.type) {\n    case DELETE_POST:\n      return _.omit(state, action.payload);\n\n    case FETCH_POST:\n      // const post = action.payload.data;\n      // const newState = { ...state };\n      // newState[post.id] = post;\n      // return newState;\n      return { ...state, [action.payload.data.id]: action.payload.data };\n      \n    case FETCH_POSTS:\n      return _.mapKeys(action.payload.data, 'id');\n    \n    default:\n      return state;\n  }\n}","import { combineReducers } from 'redux';\nimport { reducer as formReducer } from 'redux-form';\nimport PostsReducer from './reducer_posts';\n\nconst rootReducer = combineReducers({\n  posts: PostsReducer,\n  form: formReducer\n});\n\nexport default rootReducer;","import _ from 'lodash';\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { fetchPosts } from '../actions';\n\nclass PostsIndex extends Component {\n  componentDidMount() {\n    this.props.fetchPosts();\n  }\n\n  renderPosts() {\n    return _.map(this.props.posts, post => {\n      return(\n        <li className=\"list-group-item\" key={ post.id }>\n          <Link to={`/posts/${post.id}`}>\n            { post.title }\n          </Link>\n        </li>\n      );\n    });\n  }\n\n  render() {\n    console.log(this.props.posts);\n    return(\n      <div>\n        <div className=\"text-xs-right\">\n          <Link className=\"btn btn-primary\" to=\"/posts/new\">\n            Add a Post\n          </Link>\n        </div>\n        <h3>Posts</h3>\n        <ul className=\"list-group\">\n          { this.renderPosts() }\n        </ul>\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return { posts: state.posts };\n}\n\nexport default connect(mapStateToProps, { fetchPosts })(PostsIndex);","import React, { Component } from 'react';\nimport { Field, reduxForm } from 'redux-form';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { createPost } from '../actions';\n\nclass PostsNew extends Component {\n  renderField(field) {\n    const { meta: { touched, error } } = field;\n    const className = `form-group ${touched && error ? 'has-danger' : ''}`;\n\n    return (\n      <div className={className}>\n        <label>{field.label}</label>\n        <input\n          className=\"form-control\"\n          type=\"text\"\n          {...field.input}\n        />\n        <div className=\"text-help\">\n          {touched ? error : ''}\n        </div>\n      </div>\n    );\n  }\n\n  onSubmit(values) {\n    this.props.createPost(values, () => {\n      this.props.history.push('/');\n    });\n  }\n\n  render() {\n    const { handleSubmit } = this.props;\n\n    return (\n      <form onSubmit={handleSubmit(this.onSubmit.bind(this))}>\n        <Field\n          label=\"Title For Post\"\n          name=\"title\"\n          component={this.renderField}\n        />\n        \n        <Field\n          label=\"Post Content\"\n          name=\"content\"\n          component={this.renderField}\n        />\n        <button type=\"submit\" className=\"btn btn-primary\">Submit</button>\n        <Link to=\"/\" className=\"btn btn-danger\">Cancel</Link>\n      </form>\n    );\n  }\n}\n\nfunction validate(values) {\n  const errors = {};\n\n  if (!values.title) {\n    errors.title = \"Enter a title\";\n  }\n\n  if (!values.content) {\n    errors.content = \"Enter some content please\";\n  }\n\n  return errors;\n}\n\nexport default reduxForm({\n  validate,\n  form: 'PostsNewForm'\n})(\n  connect(null, { createPost })(PostsNew)\n);","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { fetchPost, deletePost } from '../actions';\n\nclass PostsShow extends Component {\n  componentDidMount() {\n    const { id } = this.props.match.params;\n    this.props.fetchPost(id);\n  }\n\n  onDeleteClick() {\n    const { id } = this.props.match.params;\n\n    this.props.deletePost(id, () => {\n      this.props.history.push('/');\n    });\n  }\n\n  render() {\n    const { post } = this.props;\n\n    if(!post) {\n      return <div>Loading...</div>;\n    }\n\n    return(\n      <div>\n        <Link to=\"/\">Back To Posts</Link>\n        <button\n          className=\"btn btn-danger pull-xs-right\"\n          onClick={this.onDeleteClick.bind(this)}\n        >\n          Delete Post\n        </button>\n        <h3>Title: {post.title}</h3>\n        <p>Content: {post.content}</p>\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps({ posts }, ownProps) {\n  return { post: posts[ownProps.match.params.id] };\n}\n\nexport default connect(mapStateToProps, { fetchPost, deletePost })(PostsShow);","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware } from 'redux';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\nimport promise from 'redux-promise';\n\nimport LoginForm from './components/LoginForm';\nimport reducers from './reducers';\nimport PostsIndex from './components/posts_index';\nimport PostsNew from './components/posts_new';\nimport PostsShow from './components/posts_show';\n\n\nconst createStoreWithMiddleware = applyMiddleware(promise)(createStore);\n\nReactDOM.render(\n  <Provider store={createStoreWithMiddleware(reducers)}>\n    <BrowserRouter>\n      <div>\n        <Switch>\n          <Route path=\"/login\" component={LoginForm} />\n          <Route path=\"/posts/new\" component={PostsNew} />\n          <Route path=\"/posts/:id\" component={PostsShow} />\n          <Route path=\"/\" component={PostsIndex} />\n        </Switch>\n      </div>\n    </BrowserRouter>\n  </Provider>\n  , document.querySelector('.container'));\n \n"],"sourceRoot":""}