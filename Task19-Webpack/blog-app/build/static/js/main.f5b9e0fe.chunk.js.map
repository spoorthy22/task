{"version":3,"sources":["actions/index.js","reducers/reducer_posts.js","reducers/index.js","components/posts_index.js","components/posts_new.js","components/posts_show.js","index.js"],"names":["FETCH_POSTS","FETCH_POST","CREATE_POST","DELETE_POST","ROOT_URL","API_KEY","rootReducer","combineReducers","posts","state","arguments","length","undefined","action","type","_","omit","payload","Object","objectSpread","defineProperty","data","id","mapKeys","form","formReducer","PostsIndex","this","props","fetchPosts","map","post","react_default","a","createElement","className","key","react_router_dom","to","concat","title","console","log","renderPosts","Component","connect","request","axios","get","PostsNew","field","_field$meta","meta","touched","error","label","assign","input","values","_this","createPost","history","push","handleSubmit","onSubmit","bind","Field","name","component","renderField","reduxForm","validate","errors","categories","content","callback","then","PostsShow","match","params","fetchPost","deletePost","onClick","onDeleteClick","_ref","ownProps","delete","createStoreWithMiddleware","applyMiddleware","promise","createStore","ReactDOM","render","es","store","reducers","react_router","path","document","querySelector"],"mappings":"yRAEaA,EAAc,cACdC,EAAa,aACbC,EAAc,cACdC,EAAc,cAErBC,EAAW,sCACXC,EAAU,eCLD,ICMAC,EALKC,YAAgB,CAClCC,MDFa,WAA8B,IAApBC,EAAoBC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAZ,GAAIG,EAAQH,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EAC3C,OAAQC,EAAOC,MACb,KAAKX,EACH,OAAOY,IAAEC,KAAKP,EAAOI,EAAOI,SAE9B,KAAKhB,EAKH,OAAOiB,OAAAC,EAAA,EAAAD,CAAA,GAAKT,EAAZS,OAAAE,EAAA,EAAAF,CAAA,GAAoBL,EAAOI,QAAQI,KAAKC,GAAKT,EAAOI,QAAQI,OAE9D,KAAKrB,EACH,OAAOe,IAAEQ,QAAQV,EAAOI,QAAQI,KAAM,MAExC,QACE,OAAOZ,ICbXe,KAAMC,8CCAFC,8LAEFC,KAAKC,MAAMC,mDAIX,OAAOd,IAAEe,IAAIH,KAAKC,MAAMpB,MAAO,SAAAuB,GAC7B,OACEC,EAAAC,EAAAC,cAAA,MAAIC,UAAU,kBAAkBC,IAAML,EAAKT,IACzCU,EAAAC,EAAAC,cAACG,EAAA,EAAD,CAAMC,GAAE,UAAAC,OAAYR,EAAKT,KACrBS,EAAKS,2CASf,OADAC,QAAQC,IAAIf,KAAKC,MAAMpB,OAErBwB,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBACbH,EAAAC,EAAAC,cAACG,EAAA,EAAD,CAAMF,UAAU,kBAAkBG,GAAG,cAArC,eAIFN,EAAAC,EAAAC,cAAA,mBACAF,EAAAC,EAAAC,cAAA,MAAIC,UAAU,cACVR,KAAKgB,uBA5BQC,aAuCVC,kBAJf,SAAyBpC,GACvB,MAAO,CAAED,MAAOC,EAAMD,QAGgB,CAAEqB,WHnCnC,WACL,IAAMiB,EAAUC,IAAMC,IAAN,GAAAT,OAAanC,EAAb,UAAAmC,OAA8BlC,IAE9C,MAAO,CACLS,KAAMd,EACNiB,QAAS6B,KG8BED,CAAyCnB,qBCvClDuB,sLACQC,GAAO,IAAAC,EACoBD,EAA7BE,KAAQC,EADCF,EACDE,QAASC,EADRH,EACQG,MACnBnB,EAAS,cAAAI,OAAiBc,GAAWC,EAAQ,aAAe,IAElE,OACEtB,EAAAC,EAAAC,cAAA,OAAKC,UAAWA,GACdH,EAAAC,EAAAC,cAAA,aAAQgB,EAAMK,OACdvB,EAAAC,EAAAC,cAAA,QAAAhB,OAAAsC,OAAA,CACErB,UAAU,eACVrB,KAAK,QACDoC,EAAMO,QAEZzB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACZkB,EAAUC,EAAQ,sCAMlBI,GAAQ,IAAAC,EAAAhC,KACfA,KAAKC,MAAMgC,WAAWF,EAAQ,WAC5BC,EAAK/B,MAAMiC,QAAQC,KAAK,wCAInB,IACCC,EAAiBpC,KAAKC,MAAtBmC,aAER,OACE/B,EAAAC,EAAAC,cAAA,QAAM8B,SAAUD,EAAapC,KAAKqC,SAASC,KAAKtC,QAC9CK,EAAAC,EAAAC,cAACgC,EAAA,EAAD,CACEX,MAAM,iBACNY,KAAK,QACLC,UAAWzC,KAAK0C,cAGlBrC,EAAAC,EAAAC,cAACgC,EAAA,EAAD,CACEX,MAAM,eACNY,KAAK,UACLC,UAAWzC,KAAK0C,cAElBrC,EAAAC,EAAAC,cAAA,UAAQpB,KAAK,SAASqB,UAAU,mBAAhC,UACAH,EAAAC,EAAAC,cAACG,EAAA,EAAD,CAAMC,GAAG,IAAIH,UAAU,kBAAvB,kBA3CeS,aAmER0B,kBAAU,CACvBC,SAnBF,SAAkBb,GAChB,IAAMc,EAAS,GAcf,OAZKd,EAAOlB,QACVgC,EAAOhC,MAAQ,iBAGZkB,EAAOe,aACVD,EAAOC,WAAa,yBAGjBf,EAAOgB,UACVF,EAAOE,QAAU,6BAGZF,GAKPhD,KAAM,gBAFO8C,CAIbzB,YAAQ,KAAM,CAAEe,WJ1DX,SAAoBF,EAAQiB,GACjC,IAAM7B,EAAUC,IAAMhB,KAAN,GAAAQ,OAAcnC,EAAd,UAAAmC,OAA+BlC,GAAWqD,GACvDkB,KAAK,kBAAMD,MAEd,MAAO,CACL7D,KAAMZ,EACNe,QAAS6B,KIoDXD,CAA8BI,ICxE1B4B,8LACgB,IACVvD,EAAOK,KAAKC,MAAMkD,MAAMC,OAAxBzD,GACRK,KAAKC,MAAMoD,UAAU1D,2CAGP,IAAAqC,EAAAhC,KACNL,EAAOK,KAAKC,MAAMkD,MAAMC,OAAxBzD,GAERK,KAAKC,MAAMqD,WAAW3D,EAAI,WACxBqC,EAAK/B,MAAMiC,QAAQC,KAAK,wCAInB,IACC/B,EAASJ,KAAKC,MAAdG,KAER,OAAIA,EAKFC,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACG,EAAA,EAAD,CAAMC,GAAG,KAAT,iBACAN,EAAAC,EAAAC,cAAA,UACEC,UAAU,+BACV+C,QAASvD,KAAKwD,cAAclB,KAAKtC,OAFnC,eAMAK,EAAAC,EAAAC,cAAA,UAAKH,EAAKS,OACVR,EAAAC,EAAAC,cAAA,SAAIH,EAAK2C,UAbJ1C,EAAAC,EAAAC,cAAA,gCAlBWU,aAyCTC,kBAJf,SAAAuC,EAAoCC,GAClC,MAAO,CAAEtD,KADmCqD,EAAnB5E,MACJ6E,EAASP,MAAMC,OAAOzD,MAGL,CAAE0D,ULjBnC,SAAmB1D,GACxB,IAAMwB,EAAUC,IAAMC,IAAN,GAAAT,OAAanC,EAAb,WAAAmC,OAA+BjB,GAA/BiB,OAAoClC,IAEpD,MAAO,CACLS,KAAMb,EACNgB,QAAS6B,IKYwCmC,WLR9C,SAAoB3D,EAAIqD,GAI7B,OAHgB5B,IAAMuC,OAAN,GAAA/C,OAAgBnC,EAAhB,WAAAmC,OAAkCjB,GAAlCiB,OAAuClC,IACpDuE,KAAK,kBAAMD,MAEP,CACL7D,KAAMX,EACNc,QAASK,KKEEuB,CAAoDgC,GCjC7DU,EAA4BC,YAAgBC,IAAhBD,CAAyBE,KAE3DC,IAASC,OACP5D,EAAAC,EAAAC,cAAC2D,EAAA,EAAD,CAAUC,MAAOP,EAA0BQ,IACzC/D,EAAAC,EAAAC,cAACG,EAAA,EAAD,KACEL,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAC8D,EAAA,EAAD,KACEhE,EAAAC,EAAAC,cAAC8D,EAAA,EAAD,CAAOC,KAAK,aAAa7B,UAAWnB,IACpCjB,EAAAC,EAAAC,cAAC8D,EAAA,EAAD,CAAOC,KAAK,aAAa7B,UAAWS,IACpC7C,EAAAC,EAAAC,cAAC8D,EAAA,EAAD,CAAOC,KAAK,IAAI7B,UAAW1C,QAKjCwE,SAASC,cAAc","file":"static/js/main.f5b9e0fe.chunk.js","sourcesContent":["import axios from 'axios';\n\nexport const FETCH_POSTS = 'fetch_posts';\nexport const FETCH_POST = 'fetch_post';\nexport const CREATE_POST = 'create_post';\nexport const DELETE_POST = 'delete_post';\n\nconst ROOT_URL = 'https://reduxblog.herokuapp.com/api';\nconst API_KEY = '?key=hu53yin';\n\nexport function fetchPosts() {\n  const request = axios.get(`${ROOT_URL}/posts${API_KEY}`);\n\n  return {\n    type: FETCH_POSTS,\n    payload: request\n  };\n}\n\nexport function createPost(values, callback) {\n  const request = axios.post(`${ROOT_URL}/posts${API_KEY}`, values)\n    .then(() => callback());\n\n  return {\n    type: CREATE_POST,\n    payload: request\n  };\n}\n\nexport function fetchPost(id) {\n  const request = axios.get(`${ROOT_URL}/posts/${id}${API_KEY}`);\n\n  return {\n    type: FETCH_POST,\n    payload: request\n  }\n}\n\nexport function deletePost(id, callback) {\n  const request = axios.delete(`${ROOT_URL}/posts/${id}${API_KEY}`)\n    .then(() => callback());\n\n  return {\n    type: DELETE_POST,\n    payload: id\n  }\n}","import _ from 'lodash';\nimport { FETCH_POSTS, FETCH_POST, DELETE_POST } from '../actions';\n\nexport default function (state = {}, action) {\n  switch (action.type) {\n    case DELETE_POST:\n      return _.omit(state, action.payload);\n\n    case FETCH_POST:\n      // const post = action.payload.data;\n      // const newState = { ...state };\n      // newState[post.id] = post;\n      // return newState;\n      return { ...state, [action.payload.data.id]: action.payload.data };\n      \n    case FETCH_POSTS:\n      return _.mapKeys(action.payload.data, 'id');\n    \n    default:\n      return state;\n  }\n}","import { combineReducers } from 'redux';\nimport { reducer as formReducer } from 'redux-form';\nimport PostsReducer from './reducer_posts';\n\nconst rootReducer = combineReducers({\n  posts: PostsReducer,\n  form: formReducer\n});\n\nexport default rootReducer;","import _ from 'lodash';\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { fetchPosts } from '../actions';\n\nclass PostsIndex extends Component {\n  componentDidMount() {\n    this.props.fetchPosts();\n  }\n\n  renderPosts() {\n    return _.map(this.props.posts, post => {\n      return(\n        <li className=\"list-group-item\" key={ post.id }>\n          <Link to={`/posts/${post.id}`}>\n            { post.title }\n          </Link>\n        </li>\n      );\n    });\n  }\n\n  render() {\n    console.log(this.props.posts);\n    return(\n      <div>\n        <div className=\"text-xs-right\">\n          <Link className=\"btn btn-primary\" to=\"/posts/new\">\n            Add a Post\n          </Link>\n        </div>\n        <h3>Posts</h3>\n        <ul className=\"list-group\">\n          { this.renderPosts() }\n        </ul>\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return { posts: state.posts };\n}\n\nexport default connect(mapStateToProps, { fetchPosts })(PostsIndex);","import React, { Component } from 'react';\nimport { Field, reduxForm } from 'redux-form';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { createPost } from '../actions';\n\nclass PostsNew extends Component {\n  renderField(field) {\n    const { meta: { touched, error } } = field;\n    const className = `form-group ${touched && error ? 'has-danger' : ''}`;\n\n    return (\n      <div className={className}>\n        <label>{field.label}</label>\n        <input\n          className=\"form-control\"\n          type=\"text\"\n          {...field.input}\n        />\n        <div className=\"text-help\">\n          {touched ? error : ''}\n        </div>\n      </div>\n    );\n  }\n\n  onSubmit(values) {\n    this.props.createPost(values, () => {\n      this.props.history.push('/');\n    });\n  }\n\n  render() {\n    const { handleSubmit } = this.props;\n\n    return (\n      <form onSubmit={handleSubmit(this.onSubmit.bind(this))}>\n        <Field\n          label=\"Title For Post\"\n          name=\"title\"\n          component={this.renderField}\n        />\n        \n        <Field\n          label=\"Post Content\"\n          name=\"content\"\n          component={this.renderField}\n        />\n        <button type=\"submit\" className=\"btn btn-primary\">Submit</button>\n        <Link to=\"/\" className=\"btn btn-danger\">Cancel</Link>\n      </form>\n    );\n  }\n}\n\nfunction validate(values) {\n  const errors = {};\n\n  if (!values.title) {\n    errors.title = \"Enter a title\";\n  }\n\n  if (!values.categories) {\n    errors.categories = \"Enter some categories\";\n  }\n\n  if (!values.content) {\n    errors.content = \"Enter some content please\";\n  }\n\n  return errors;\n}\n\nexport default reduxForm({\n  validate,\n  form: 'PostsNewForm'\n})(\n  connect(null, { createPost })(PostsNew)\n);","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { fetchPost, deletePost } from '../actions';\n\nclass PostsShow extends Component {\n  componentDidMount() {\n    const { id } = this.props.match.params;\n    this.props.fetchPost(id);\n  }\n\n  onDeleteClick() {\n    const { id } = this.props.match.params;\n\n    this.props.deletePost(id, () => {\n      this.props.history.push('/');\n    });\n  }\n\n  render() {\n    const { post } = this.props;\n\n    if(!post) {\n      return <div>Loading...</div>;\n    }\n\n    return(\n      <div>\n        <Link to=\"/\">Back To Posts</Link>\n        <button\n          className=\"btn btn-danger pull-xs-right\"\n          onClick={this.onDeleteClick.bind(this)}\n        >\n          Delete Post\n        </button>\n        <h3>{post.title}</h3>\n        <p>{post.content}</p>\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps({ posts }, ownProps) {\n  return { post: posts[ownProps.match.params.id] };\n}\n\nexport default connect(mapStateToProps, { fetchPost, deletePost })(PostsShow);","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware } from 'redux';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\nimport promise from 'redux-promise';\n\nimport reducers from './reducers';\nimport PostsIndex from './components/posts_index';\nimport PostsNew from './components/posts_new';\nimport PostsShow from './components/posts_show';\n\n\nconst createStoreWithMiddleware = applyMiddleware(promise)(createStore);\n\nReactDOM.render(\n  <Provider store={createStoreWithMiddleware(reducers)}>\n    <BrowserRouter>\n      <div>\n        <Switch>\n          <Route path=\"/posts/new\" component={PostsNew} />\n          <Route path=\"/posts/:id\" component={PostsShow} />\n          <Route path=\"/\" component={PostsIndex} />\n        </Switch>\n      </div>\n    </BrowserRouter>\n  </Provider>\n  , document.querySelector('.container'));"],"sourceRoot":""}